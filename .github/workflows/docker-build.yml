# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
#
# This test is meant to verify that our Dockerfile can build successfully when
# changed on the CPU architectures we have made it support being built on.
#
name: Build nfs-ganesha base container

on:
  # Trigger only release creation
  push:
    tags:
      - 'V*' # Push events to matching V*, i.e. V4.0.8

jobs:
  nfs-ganesha:
    name: Build nfs-ganesha base container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # Generate tags using github.repository_owner and github.ref, and latest tag
      - name: Generate tags
        id: tags
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/nfs-ganesha
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}      

      # Action reference: https://github.com/docker/setup-qemu-action
      - name: Set up QEMU (for docker buildx)
        uses: docker/setup-qemu-action@v1

      # Action reference: https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Action reference: https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      # Action reference: https://github.com/docker/build-push-action
      - name: Build container
        uses: docker/build-push-action@v2
        with:
          context: ./deploy/base
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          # Use the tag name as the image tag and also tag it as latest
          tags: ${{ steps.tags.outputs.tags }}

  nfs-provisioner:
    name: Build nfs-provisioner container
    # run only if nfs-ganesha job is successful
    needs: nfs-ganesha
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # Generate tags using github.repository_owner and github.ref, and latest tag
      - name: Generate tags
        id: tags
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/nfs-provisioner
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}  

      # Action reference: https://github.com/docker/setup-qemu-action
      - name: Set up QEMU (for docker buildx)
        uses: docker/setup-qemu-action@v1

      # Action reference: https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Action reference: https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      # Action reference: https://github.com/docker/build-push-action
      - name: Build container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./deploy/docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          ARGS: --build-arg GANESHA_VERSION=${{ github.ref }}
          push: true
          # use metadata-action to generate tags
          tags: ${{ steps.tags.outputs.tags }}